{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/privacy-policy/privacy-policy.component.ts","webpack:///src/app/components/privacy-policy/privacy-policy.component.html","webpack:///src/app/components/user/doctor-dashboard/doctor-dashboard.component.ts","webpack:///src/app/components/user/doctor-dashboard/doctor-dashboard.component.html","webpack:///src/app/components/user/patient-dashboard/patient-dashboard-doctors-list/patient-dashboard-doctors-list.component.ts","webpack:///src/app/components/user/patient-dashboard/patient-dashboard-doctors-list/patient-dashboard-doctors-list.component.html","webpack:///src/app/components/user/patient-dashboard/patient-dashboard-settings/patient-dashboard-settings.component.ts","webpack:///src/app/components/user/patient-dashboard/patient-dashboard-settings/patient-dashboard-settings.component.html","webpack:///src/app/components/user/patient-dashboard/patient-dashboard.component.ts","webpack:///src/app/components/user/patient-dashboard/patient-dashboard.component.html","webpack:///src/app/components/user/user-login/user-login.component.ts","webpack:///src/app/components/user/user-login/user-login.component.html","webpack:///src/app/components/user/user-signup/user-signup.component.ts","webpack:///src/app/components/user/user-signup/user-signup.component.html","webpack:///src/app/components/user/user.component.ts","webpack:///src/app/components/user/user.component.html","webpack:///src/app/models/doctor.model.ts","webpack:///src/app/models/patient.model.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/dial-codes.service.ts","webpack:///src/app/services/home-guard.service.ts","webpack:///src/app/services/input-validation.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","router","events","pipe","event","subscribe","current","url","window","scrollTo","regexStr","regex","RegExp","test","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","AboutComponent","HomeComponent","PrivacyPolicyComponent","DoctorDashboardComponent","titleService","formBuilder","dialCodeService","inputValidation","api","validFullName","validQualification","validAddress","validWorkingDays","validWorkingHours","validDescription","validCellular","validFee","validEmail","validPassword","validNewEmail","validNewPassword","validNewPasswordConfirm","successMessageRight","successMessageLeft","noErrorRight","noErrorLeft","doctorName","countryCode","apiErrorRight","apiErrorLeft","localStorage","getItem","navigate","doctor","getDoctor","res","token","informationForm","group","fullName","qualification","address","workingDays","workingHours","description","fee","cellularNumber","credentialsForm","email","password","newEmail","newPassword","newConfirmPassword","setupDashboard","setValues","_id","ratings","setInformationFormValues","setCredentialsFormValues","dialCodes","getDialCodes","substring","setTitle","controls","setValue","removeItem","formData","isValidInput","updateDoctor","setItem","error","setTimeout","isEmail","length","updateDoctorCredentials","isAlphabetsOnly","isPhoneNumber","logOut","PatientDashboardDoctorsListComponent","i","expanded","document","getElementById","style","transform","Array","doctors","console","log","PatientDashboardSettingsComponent","PatientDashboardComponent","showDoctorsList","showSettings","patient","getPatient","getAllDoctors","setDoctors","forEach","push","sort","a","b","avgRating","patientName","gotoDoctorsList","gotoSettings","UserLoginComponent","validAccountType","noError","loginForm","accountType","type","patientAuthenticate","apiError","doctorAuthenticate","UserSignupComponent","validPasswordConfirm","signUpForm","confirmPassword","patientRegister","Object","doctorRegister","onSubmit","setAccountType","UserComponent","Doctor","Patient","APIService","http","patientJSON","JSON","stringify","body","headers","post","errorHandler","doctorJSON","params","doctorId","message","providedIn","AuthGuardService","DialCodesService","HomeGuardService","InputValidationService","str","match","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { Router, NavigationEnd  } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n\r\n  private current: string;\r\n\r\n  constructor(private router: Router) {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe((event: NavigationEnd) => {\r\n        this.current = event.url;\r\n      });\r\n    this.router.events.subscribe((event) => {\r\n        if (!(event instanceof NavigationEnd)) return;\r\n        window.scrollTo(0, 0)\r\n    });\r\n  }\r\n\r\n  setActive(regexStr: string): string {\r\n    const regex = new RegExp(regexStr);\r\n    return regex.test(this.current) ? 'active' : '';\r\n  }\r\n}\r\n","<div>\r\n  <nav class=\"navbar navbar-expand p-3\">\r\n    <a class=\"navbar-brand pl-3 pointer\">\r\n      <img src=\"../assets/img/logo.png\" width=\"50\" height=\"50\" routerLink=\"/\"/>\r\n    </a>\r\n    <a class=\"navbar-brand text-black pointer\">\r\n      <span class=\"h3\" routerLink=\"/\">DocFind</span>\r\n    </a>\r\n    <div class=\"navbar-nav ml-auto\">\r\n      <a [ngClass]=\"setActive('^\\/user$|\\/user\\/patient|\\/user\\/doctor|\\/user\\/signup|\\/user\\/login')\" class=\"nav-item nav-link text-black h5 my-auto mr-3 link pointer\" routerLink=\"/user\">My Account</a>\r\n    </div>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n  <footer class=\"container-fluid footer text-black text-center\">\r\n    <div class=\"row text-center d-flex justify-content-center mt-2 mb-4 mx-5\">\r\n      <div class=\"col-md-2\">\r\n        <h6 class=\"font-weight-bold\"><a routerLink=\"/user\" class=\"text-black\">My Account</a></h6>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <h6 class=\"font-weight-bold\"><a routerLink=\"/user/login\" class=\"text-black\">Login</a></h6>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <h6 class=\"font-weight-bold\"><a routerLink=\"/user/signup\" class=\"text-black\">Sign Up</a></h6>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <h6 class=\"font-weight-bold\"><a routerLink=\"about\" class=\"text-black\">About</a></h6>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <h6 class=\"font-weight-bold\"><a routerLink=\"policy\" class=\"text-black\">Privacy Policy</a></h6>\r\n      </div>\r\n    </div>\r\n    <hr style=\"border: 0.1px solid #000000; width: 70%;\">\r\n    <div class=\"row d-flex text-center justify-content-center mb-md-0 mb-4\">\r\n      <div class=\"col-md-8 col-12 mt-3\">\r\n        <p class=\"h6\">DocFind is a simple application made for FSWD Course. The applications main purpose is to be a catalogue of doctors for users, so that they can quickly find information on them and be able to contact them and get an appointment.</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mt-4\">\r\n        <div class=\"mb-5 flex-center\">\r\n          <a target=\"_blank\" title=\"Facebook\" href=\"https://www.facebook.com/hassaan.younas.79/\"><i class=\"fa fa-facebook-f fa-lg text-black mr-4 pointer\"></i></a>\r\n          <a target=\"_blank\" title=\"Twitter\" href=\"https://www.twitter.com\"><i class=\"fa fa-twitter fa-lg text-black mr-4 pointer\"></i></a>\r\n          <a target=\"_blank\" title=\"LinkedIn\" href=\"https://pk.linkedin.com/in/hassaan-younas-04494b169\"><i class=\"fa fa-linkedin fa-lg text-black mr-4 pointer\"></i></a>\r\n          <a target=\"_blank\" title=\"Instagram\" href=\"https://www.instagram.com/ha.ss.aa.n/\"><i class=\"fa fa-instagram fa-lg text-black mr-4 pointer\"></i></a>\r\n          <a target=\"_blank\" title=\"GitHub\" href=\"https://github.com/HassaanYounas\"><i class=\"fa fa-github fa-lg text-black pointer\"></i></a>\r\n        </div>\r\n      </div>\r\n    </div>   \r\n    <!-- <p class=\"h6\">Made with &hearts; by Rais, Jazab, Hamza and Hassaan | All Rights Reserved &copy; 2020</p> -->\r\n  </footer>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { UserSignupComponent } from './components/user/user-signup/user-signup.component';\r\nimport { UserLoginComponent } from './components/user/user-login/user-login.component';\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { DoctorDashboardComponent } from './components/user/doctor-dashboard/doctor-dashboard.component';\r\nimport { PatientDashboardComponent } from './components/user/patient-dashboard/patient-dashboard.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { PrivacyPolicyComponent } from './components/privacy-policy/privacy-policy.component';\r\nimport { PatientDashboardDoctorsListComponent } from './components/user/patient-dashboard/patient-dashboard-doctors-list/patient-dashboard-doctors-list.component';\r\nimport { PatientDashboardSettingsComponent } from './components/user/patient-dashboard/patient-dashboard-settings/patient-dashboard-settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    UserComponent,\r\n    UserSignupComponent,\r\n    UserLoginComponent,\r\n    DoctorDashboardComponent,\r\n    PatientDashboardComponent,\r\n    AboutComponent,\r\n    PrivacyPolicyComponent,\r\n    PatientDashboardDoctorsListComponent,\r\n    PatientDashboardSettingsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { UserComponent } from './components/user/user.component';\r\nimport { UserSignupComponent } from './components/user/user-signup/user-signup.component';\r\nimport { UserLoginComponent } from './components/user/user-login/user-login.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { HomeGuardService } from './services/home-guard.service';\r\nimport { DoctorDashboardComponent } from './components/user/doctor-dashboard/doctor-dashboard.component';\r\nimport { PatientDashboardComponent } from './components/user/patient-dashboard/patient-dashboard.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { PrivacyPolicyComponent } from './components/privacy-policy/privacy-policy.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, canActivate: [HomeGuardService] },\r\n    { path: 'user', component: UserComponent, canActivate: [HomeGuardService] },\r\n    { path: 'user/signup', component: UserSignupComponent, canActivate: [HomeGuardService] },\r\n    { path: 'user/login', component: UserLoginComponent, canActivate: [HomeGuardService] },\r\n    { path: 'user/doctor', component: DoctorDashboardComponent, canActivate: [AuthGuardService] },\r\n    { path: 'user/patient', component: PatientDashboardComponent, canActivate: [AuthGuardService] },\r\n    { path: 'about', component: AboutComponent },\r\n    { path: 'policy', component: PrivacyPolicyComponent },\r\n    { path: '**', redirectTo: '/' }\r\n];\r\n\r\nexport const AppRoutingModule = RouterModule.forRoot(routes);\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html'\r\n})\r\nexport class AboutComponent {\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"container my-5 px-5\">\r\n    <h2>About Us</h2>\r\n    <p>Last updated: June 16, 2020</p>\r\n    <p>DocFind is a simple application made for FSWD Course. The applications main purpose is to be a catalogue of doctors for users, so that they can quickly find information on them and be able to contact them and get an appointment.</p>\r\n    <h4>Contact Us</h4>\r\n    <p>If you have any questions, please contact us.</p>\r\n    <p>Email: hassaanyounas1@outlook.com</p>\r\n    <p>Phone: +923361577283</p>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: 'home.component.html'\r\n})\r\nexport class HomeComponent {\r\n\r\n    constructor() {}\r\n}\r\n","<div>\r\n    <div class=\"container-fluid align-items-center text-center section-primary\">\r\n        <h1 class=\"text-black display-3\">DocFind</h1>\r\n        <p class=\"text-black h4\">Finding the doctor of your choice, made easy!</p>\r\n    </div>\r\n    <div class=\"container-fluid text-center section-secondary\">\r\n        <p class=\"text-black h4 my-4\">What're you waiting for?</p>\r\n        <button routerLink=\"/user/signup\" type=\"button\" class=\"btn\">Sign Up</button>\r\n        <p class=\"text-black h5 d-inline mx-4\">or</p>\r\n        <button routerLink=\"/user/login\" type=\"button\" class=\"btn\">Login</button>\r\n    </div>\r\n    <div class=\"container text-center mt-5 p-4\">\r\n        <p class=\"text-black h2\">How does DocFind work?</p>\r\n        <svg class=\"mt-2\" width=\"40px\" height=\"40px\" viewBox=\"0 0 451.847 451.847\">\r\n            <path d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751 c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0 c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"/>       \r\n        </svg>\r\n    </div>\r\n    <svg viewBox=\"0 0 1440 320\">\r\n        <path fill=\"#e85a4f\" fill-opacity=\"1\" d=\"M0,32L48,53.3C96,75,192,117,288,144C384,171,480,181,576,165.3C672,149,768,107,864,90.7C960,75,1056,85,1152,106.7C1248,128,1344,160,1392,176L1440,192L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\r\n    </svg>\r\n    <div class=\"container-fluid section-tertiary\">\r\n        <div class=\"row my-2\">\r\n            <div class=\"col-sm mr-5\">\r\n                <h2 class=\"text-center mb-4\">😷 Patient</h2>\r\n                <ul class=\"list-group\">\r\n                    <li class=\"list-item mb-3\">🖤 Sign Up or Login</li>\r\n                    <li class=\"list-item mb-3\">🖤 Choose doctor of your choice</li>\r\n                    <li class=\"list-item mb-3\">🖤 Contact via Phone, SMS or Email</li>\r\n                    <li class=\"list-item mb-3\">🖤 Set an appointment</li>\r\n                    <li class=\"list-item mb-3\">🖤 Go to the doctor, maybe, I don't know 🤷‍♂️</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-sm ml-5\">\r\n                <h2 class=\"text-center mb-4\">👨‍⚕️ Doctor</h2>\r\n                <ul class=\"list-group\">\r\n                    <li class=\"list-item mb-3\">🖤 Sign Up or Login</li>\r\n                    <li class=\"list-item mb-3\">🖤 Setup your profile</li>\r\n                    <li class=\"list-item mb-3\">🖤 Receive patients appointment</li>\r\n                    <li class=\"list-item mb-3\">🖤 Wait for the patients arrival</li>\r\n                    <li class=\"list-item mb-3\">🖤 Do what you do best 🤘</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <svg viewBox=\"0 0 1440 320\">\r\n        <path fill=\"#e85a4f\" fill-opacity=\"1\" d=\"M0,64L48,90.7C96,117,192,171,288,176C384,181,480,139,576,112C672,85,768,75,864,80C960,85,1056,107,1152,122.7C1248,139,1344,149,1392,154.7L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"></path>\r\n    </svg>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-policy',\r\n  templateUrl: './privacy-policy.component.html'\r\n})\r\nexport class PrivacyPolicyComponent {\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"container my-5 px-5\">\r\n    <h2>Privacy Policy</h2>\r\n    <p>Last updated: June 16, 2020</p>\r\n    <p>My Company DocFind operates http://www.docfind.com. This page informs you of our policies regarding the collection, use and disclosure of Personal Information we receive from users of the Site. We use your Personal Information only for providing and improving the Site. By using the Site, you agree to the collection and use of information in accordance with this policy.</p>\r\n    <h4>Information Collection And Use</h4>\r\n    <p>While using our Site, we may ask you to provide us with certain personally identifiable information that can be used to contact or identify you. Personally identifiable information may include, but is not limited to your name (\"Personal Information\").\r\n    <h4>Log Data</h4>\r\n    <p>Like many site operators, we collect information that your browser sends whenever you visit our Site (\"Log Data\").</p>\r\n    <p>This Log Data may include information such as your computer's Internet Protocol (\"IP\") address, browser type, browser version, the pages of our Site that you visit, the time and date of your visit, the time spent on those pages and other statistics.</p>\r\n    <p>In addition, we may use third party services such as Google Analytics that collect, monitor and analyze this.</p>\r\n    <p>The Log Data section is for businesses that use analytics or tracking services in websites or apps, like Google Analytics. For the full disclosure section, create your own Privacy Policy.</p>\r\n    <h4>Communications</h4>\r\n    <p>We may use your Personal Information to contact you with newsletters, marketing or promotional materials and other information that; the Communications section is for businesses that may contact users via email (email newsletters) or other methods. For the full disclosure section, create your own Privacy Policy.</p>\r\n    <h4>Cookies</h4>\r\n    <p>Cookies are files with small amount of data, which may include an anonymous unique identifier. Cookies are sent to your browser from a web site and stored on your computer's hard drive.</p>\r\n    <p>Like many sites, we use \"cookies\" to collect information. You can instruct your browser to refuse all cookies or to indicate when a cookie is being sent. However, if you do not accept cookies, you may not be able to use some portions of our Site.</p>\r\n    <h4>Security</h4>\r\n    <p>The security of your Personal Information is important to us, but remember that no method of transmission over the Internet, or method of electronic storage, is 100% secure. While we strive to use commercially acceptable means to protect your Personal Information, we cannot guarantee its absolute security.</p>\r\n    <h4>Changes To This Privacy Policy</h4>\r\n    <p>This Privacy Policy is effective as of June 16, 2020 and will remain in effect except with respect to any changes in its provisions in the future, which will be in effect immediately after being posted on this page.</p>\r\n    <p>We reserve the right to update or change our Privacy Policy at any time and you should check this Privacy Policy periodically. Your continued use of the Service after we post any modifications to the Privacy Policy on this page will constitute your acknowledgment of the modifications and your consent to abide and be bound by the modified Privacy Policy.</p>\r\n    <p>If we make any material changes to this Privacy Policy, we will notify you either through the email address you have provided us, or by placing a prominent notice on our website.</p>\r\n    <h4>Contact Us</h4>\r\n    <p>If you have any questions about this Privacy Policy, please contact us.</p>\r\n    <p>Email: hassaanyounas1@outlook.com</p>\r\n    <p>Phone: +923361577283</p>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DialCodesService } from 'src/app/services/dial-codes.service';\r\nimport { InputValidationService } from 'src/app/services/input-validation.service';\r\nimport { Doctor } from 'src/app/models/doctor.model';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-doctor-dashboard',\r\n  templateUrl: './doctor-dashboard.component.html',\r\n  styleUrls: ['./doctor-dashboard.component.sass']\r\n})\r\nexport class DoctorDashboardComponent {\r\n\r\n  validFullName: boolean = true;\r\n  validQualification: boolean = true;\r\n  validAddress: boolean = true;\r\n  validWorkingDays: boolean = true;\r\n  validWorkingHours: boolean = true;\r\n  validDescription: boolean = true;\r\n  validCellular: boolean = true;\r\n  validFee: boolean = true;\r\n\r\n  validEmail: boolean = true;\r\n  validPassword: boolean = true;\r\n  validNewEmail: boolean = true;\r\n  validNewPassword: boolean = true;\r\n  validNewPasswordConfirm: boolean = true;\r\n\r\n  successMessageRight: boolean = false;\r\n  successMessageLeft: boolean = false;\r\n  noErrorRight: boolean = true;\r\n  noErrorLeft: boolean = true;\r\n\r\n  doctorName: string = '';\r\n  countryCode: string = '';\r\n  apiErrorRight: string = '';\r\n  apiErrorLeft: string = '';\r\n\r\n  informationForm: any;\r\n  credentialsForm: any;\r\n  dialCodes: any;\r\n\r\n  doctor: Doctor;\r\n\r\n  constructor(\r\n    private titleService: Title,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private dialCodeService: DialCodesService,\r\n    private inputValidation: InputValidationService,\r\n    private api: APIService\r\n  ) {\r\n    if (localStorage.getItem('type') === 'Patient') this.router.navigate(['/user/patient']);\r\n    else {\r\n      this.doctor = new Doctor();\r\n      this.api.getDoctor(localStorage.getItem('id')).subscribe(\r\n        (res: any) => {\r\n          if (res.token !== '') {\r\n            this.informationForm = this.formBuilder.group({\r\n              fullName: '', qualification: '', address: '', workingDays: '', \r\n              workingHours: '', description: '', fee: '', cellularNumber: ''\r\n            });\r\n            this.credentialsForm = this.formBuilder.group({\r\n              email: '', password: '', newEmail: '', newPassword: '', newConfirmPassword: ''\r\n            });\r\n            this.setupDashboard(res);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  setCountryCode(code: string) {\r\n    this.countryCode = code;\r\n  }\r\n\r\n  setupDashboard(res: any): void {\r\n    this.doctor.setValues(\r\n      res._id,\r\n      res.fullName,\r\n      res.email,\r\n      '',\r\n      res.cellularNumber,\r\n      res.qualification,\r\n      res.workingDays,\r\n      res.workingHours,\r\n      res.address,\r\n      res.fee,\r\n      res.description,\r\n      res.ratings\r\n    );\r\n    this.doctorName = this.doctor.fullName + ' | Doctor';\r\n    this.setInformationFormValues();\r\n    this.setCredentialsFormValues();\r\n    this.dialCodes = this.dialCodeService.getDialCodes();\r\n    if (this.doctor.cellularNumber === '') this.countryCode = 'Code';\r\n    else this.countryCode = this.doctor.cellularNumber.substring(0, 2);\r\n    this.titleService.setTitle(this.doctor.fullName + ' | Doctor');\r\n  }\r\n\r\n  setInformationFormValues(): void {\r\n    this.informationForm.controls['fullName'].setValue(this.doctor.fullName);\r\n    this.informationForm.controls['qualification'].setValue(this.doctor.qualification);\r\n    this.informationForm.controls['address'].setValue(this.doctor.address);\r\n    this.informationForm.controls['workingDays'].setValue(this.doctor.workingDays);\r\n    this.informationForm.controls['workingHours'].setValue(this.doctor.workingHours);\r\n    this.informationForm.controls['description'].setValue(this.doctor.description);\r\n    this.informationForm.controls['cellularNumber'].setValue(this.doctor.cellularNumber.substring(2));\r\n    this.informationForm.controls['fee'].setValue(this.doctor.fee);\r\n  }\r\n\r\n  setCredentialsFormValues(): void {\r\n    this.credentialsForm.controls['email'].setValue(this.doctor.email);\r\n    this.credentialsForm.controls['password'].setValue('');\r\n    this.credentialsForm.controls['newEmail'].setValue('');\r\n    this.credentialsForm.controls['newPassword'].setValue('');\r\n    this.credentialsForm.controls['newConfirmPassword'].setValue('');\r\n  }\r\n\r\n  logOut(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('id');\r\n    localStorage.removeItem('type');\r\n    this.titleService.setTitle('DocFind');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  onInfoSubmit(formData: any): void {\r\n    if (this.isValidInput(formData)) {\r\n      formData.cellularNumber = this.countryCode + formData.cellularNumber;\r\n      this.api.updateDoctor(formData, localStorage.getItem('id')).subscribe(\r\n        (res: any) => {\r\n          this.noErrorRight = true;\r\n          if (res.token !== '') {\r\n            localStorage.setItem('token', res.token);\r\n            this.setupDashboard(res);\r\n            this.successMessageLeft = true;\r\n          }\r\n        }, (error: any) => { this.noErrorRight = false; this.apiErrorRight = error; }\r\n      );\r\n      setTimeout(() => this.successMessageLeft = false, 3000);\r\n    }\r\n  }\r\n\r\n  onCredentialsSubmit(formData: any): void {\r\n    this.validEmail = !this.inputValidation.isEmail(formData.email) ? false : true;\r\n    this.validPassword = !(formData.password === '');\r\n    this.validNewEmail = !this.inputValidation.isEmail(formData.newEmail) ? false : true;\r\n    this.validNewPassword = (formData.newPassword.length >= 8);\r\n    this.validNewPasswordConfirm = formData.newPassword === formData.newConfirmPassword;\r\n    if (this.validEmail && this.validPassword && this.validNewEmail && this.validNewPassword && this.validNewPasswordConfirm) {\r\n      this.api.updateDoctorCredentials(formData, localStorage.getItem('id')).subscribe(\r\n        (res: any) => {\r\n          this.noErrorRight = true;\r\n          if (res.token !== '') {\r\n            localStorage.setItem('token', res.token);\r\n            this.setupDashboard(res);\r\n            this.successMessageRight = true;\r\n          }\r\n        }, (error: any) => { this.noErrorRight = false; this.apiErrorRight = error; }\r\n      );\r\n      setTimeout(() => this.successMessageRight = false, 3000);\r\n    }\r\n  }\r\n\r\n  private isValidInput(formData: any): boolean {\r\n    this.validFullName = !this.inputValidation.isAlphabetsOnly(formData.fullName) ? false : true;\r\n    this.validQualification = (formData.qualification === '') ? false : true;\r\n    this.validAddress = (formData.address === '') ? false : true;\r\n    this.validWorkingDays = (formData.workingDays === '') ? false : true;\r\n    this.validWorkingHours = (formData.workingHours === '') ? false : true;\r\n    this.validDescription = (formData.description === '') ? false : true;\r\n    this.validCellular = !(this.inputValidation.isPhoneNumber(formData.cellularNumber) && this.countryCode !== 'Code') ? false : true;\r\n    this.validFee = (formData.fee === '') ? false : true;\r\n    return this.validFullName &&\r\n      this.validQualification &&\r\n      this.validAddress &&\r\n      this.validWorkingDays &&\r\n      this.validWorkingHours &&\r\n      this.validDescription && \r\n      this.validCellular &&\r\n      this.validFee ? true : false;\r\n  }\r\n}\r\n","<div>\r\n    <div class=\"section-topbar\">\r\n        <div class=\"container d-flex justify-content-between align-items-center pt-3 pb-2\">\r\n            <h3 [innerHTML]=\"doctorName\"></h3>\r\n            <a class=\"pointer h5\" (click)=\"logOut()\">Log Out</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col text-center section-form-left mr-5 mt-5 py-5\">\r\n              <p class=\"h5 mb-1\">Update Your Information</p>\r\n              <p class=\"h6 mb-3\">So that patients can view your profile 😀</p>\r\n              <form *ngIf=\"this.informationForm\" class=\"mx-5\" [formGroup]=\"informationForm\" (ngSubmit)=\"onInfoSubmit(informationForm.value)\">\r\n                    <input id=\"fullName\" required formControlName=\"fullName\" type=\"text\" class=\"form-control form-control-custom\" placeholder=\"Full Name\">\r\n                    <h6 [ngClass]=\"{'d-none': validFullName}\" class=\"font-weight-bold text-danger mt-2\">Invalid name</h6>\r\n                    <input id=\"qualification\" required formControlName=\"qualification\" type=\"qualification\" class=\"form-control form-control-custom mt-2\" placeholder=\"Qualification (MBBS)\">\r\n                    <h6 [ngClass]=\"{'d-none': validQualification}\" class=\"font-weight-bold text-danger mt-2\">Please enter your qualification</h6>\r\n                    <input id=\"address\" required formControlName=\"address\" type=\"address\" class=\"form-control form-control-custom mt-2\" placeholder=\"Complete Address\">\r\n                    <h6 [ngClass]=\"{'d-none': validAddress}\" class=\"font-weight-bold text-danger mt-2\">Please enter your address</h6>\r\n                    <div class=\"mt-2 input-group\">\r\n                        <input id=\"workingDays\" formControlName=\"workingDays\" required type=\"text\" class=\"form-control form-control-custom mr-1\" placeholder=\"Days (Mon-Fri)\"> \r\n                        <input id=\"workingHours\" formControlName=\"workingHours\" required type=\"text\" class=\"form-control form-control-custom ml-1\" placeholder=\"Hours (5-9)\">\r\n                    </div>\r\n                    <h6 [ngClass]=\"{'d-none': validWorkingDays}\" class=\"font-weight-bold text-danger mt-2\">Please enter working days</h6>\r\n                    <h6 [ngClass]=\"{'d-none': validWorkingHours}\" class=\"font-weight-bold text-danger mt-2\">Please enter working hours</h6>\r\n                    <textarea id=\"description\" formControlName=\"description\" rows=\"3\" class=\"form-control form-control-custom mt-2\" placeholder=\"A small description about yourself 👨‍⚕️\"></textarea>\r\n                    <h6 [ngClass]=\"{'d-none': validDescription}\" class=\"font-weight-bold text-danger mt-2\">Please provide a small description</h6>\r\n                    <div class=\"mt-2 input-group\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <button id=\"dialCodeBtn\" class=\"btn-dropdown mr-2 dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" [innerHTML]=\"countryCode\"></button>\r\n                            <div class=\"dropdown-menu my-2 dropdown-menu-custom\">\r\n                                <li class=\"font-weight-bold dropdown-item dropdown-item-custom pointer\" (click)=\"setCountryCode(code.code)\" *ngFor=\"let code of dialCodes\">{{ code.country }} (+{{ code.code }})</li>\r\n                            </div>\r\n                        </div>\r\n                        <input id=\"cellularNumber\" formControlName=\"cellularNumber\" required type=\"text\" class=\"form-control form-control-custom mr-1\" placeholder=\"Contact\"> \r\n                        <input id=\"fee\" formControlName=\"fee\" required type=\"number\" class=\"form-control form-control-custom ml-1\" placeholder=\"Fee\"> \r\n                    </div>\r\n                    <h6 [ngClass]=\"{'d-none': validCellular}\" class=\"font-weight-bold text-danger mt-2\">Invalid contact (did you select country code?)</h6>\r\n                    <h6 [ngClass]=\"{'d-none': validFee}\" class=\"font-weight-bold text-danger mt-2\">Please enter fee amount</h6>\r\n                    <button type=\"submit\" class=\"btn mt-3\">Update</button>\r\n                </form>\r\n                <h5 [ngClass]=\"{'d-none': !successMessageLeft}\" class=\"font-weight-bold mt-3\">Information Updated Successfully</h5>\r\n                <h6 [ngClass]=\"{'d-none': noErrorLeft}\" class=\"font-weight-bold text-danger mt-3\" [innerHTML]=\"apiErrorLeft\"></h6>\r\n            </div>\r\n            <div class=\"col text-center section-form-right ml-5 mt-5 py-5\">\r\n                <p class=\"h5 mb-1\">Update Your Login Credentials</p>\r\n                <p class=\"h6 mb-3\">If you feel the need to do so 🤷‍♂️</p>\r\n                <form *ngIf=\"this.credentialsForm\" class=\"mx-5\" [formGroup]=\"credentialsForm\" (ngSubmit)=\"onCredentialsSubmit(credentialsForm.value)\">\r\n                    <input id=\"email\" required formControlName=\"email\" type=\"email\" class=\"form-control form-control-custom mt-2\" placeholder=\"Email\">\r\n                    <h6 [ngClass]=\"{'d-none': validEmail}\" class=\"font-weight-bold text-danger mt-2\">Invalid email</h6>\r\n                    <input id=\"password\" required formControlName=\"password\" type=\"password\" class=\"form-control form-control-custom mt-2\" placeholder=\"Current Password\">\r\n                    <h6 [ngClass]=\"{'d-none': validPassword}\" class=\"font-weight-bold text-danger mt-2\">Please enter your password</h6>\r\n                    <p class=\"h5 mt-4 mb-2\">Enter Your New Login Credentials</p>\r\n                    <input id=\"newEmail\" required formControlName=\"newEmail\" type=\"email\" class=\"form-control form-control-custom mt-2\" placeholder=\"New Email\">\r\n                    <h6 [ngClass]=\"{'d-none': validNewEmail}\" class=\"font-weight-bold text-danger mt-2\">Invalid email</h6>\r\n                    <input id=\"newPassword\" required formControlName=\"newPassword\" type=\"password\" class=\"form-control form-control-custom mt-2\" placeholder=\"New Password\">\r\n                    <h6 [ngClass]=\"{'d-none': validNewPassword}\" class=\"font-weight-bold text-danger mt-2\">Password should be at least 8 characters long</h6> \r\n                    <input id=\"newConfirmPassword\" required formControlName=\"newConfirmPassword\" type=\"password\" class=\"form-control form-control-custom mt-2\" placeholder=\"Confirm New Password\">\r\n                    <h6 [ngClass]=\"{'d-none': validNewPasswordConfirm}\" class=\"font-weight-bold text-danger mt-2\">Passwords do not match</h6>\r\n                    <button type=\"submit\" class=\"btn mt-3\">Update</button>\r\n                </form>\r\n                <h5 [ngClass]=\"{'d-none': !successMessageRight}\" class=\"font-weight-bold mt-3\">Credentials Updated Successfully</h5>\r\n                <h6 [ngClass]=\"{'d-none': noErrorRight}\" class=\"font-weight-bold text-danger mt-3\" [innerHTML]=\"apiErrorRight\"></h6>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <svg class=\"mb-5 pb-5\" viewBox=\"0 0 1440 220\">\r\n        <path fill=\"#e98074\" d=\"M0,256L0,192L80,192L80,160L160,160L160,256L240,256L240,32L320,32L320,160L400,160L400,64L480,64L480,64L560,64L560,96L640,96L640,128L720,128L720,64L800,64L800,192L880,192L880,128L960,128L960,64L1040,64L1040,96L1120,96L1120,224L1200,224L1200,32L1280,32L1280,320L1360,320L1360,256L1440,256L1440,0L1360,0L1360,0L1280,0L1280,0L1200,0L1200,0L1120,0L1120,0L1040,0L1040,0L960,0L960,0L880,0L880,0L800,0L800,0L720,0L720,0L640,0L640,0L560,0L560,0L480,0L480,0L400,0L400,0L320,0L320,0L240,0L240,0L160,0L160,0L80,0L80,0L0,0L0,0Z\"></path>\r\n    </svg>  \r\n</div>","import { Component, Input, AfterViewInit } from '@angular/core';\r\nimport { Patient } from 'src/app/models/patient.model';\r\nimport { Doctor } from 'src/app/models/doctor.model';\r\n\r\n@Component({\r\n  selector: 'app-patient-dashboard-doctors-list',\r\n  templateUrl: './patient-dashboard-doctors-list.component.html',\r\n  styleUrls: ['./patient-dashboard-doctors-list.component.sass']\r\n})\r\nexport class PatientDashboardDoctorsListComponent implements AfterViewInit {\r\n\r\n  expanded: boolean[];\r\n\r\n  @Input() patient: Patient;\r\n  @Input() doctors: Doctor[];\r\n\r\n  constructor() {}\r\n\r\n  flipIcon(i: number) {\r\n    if (this.expanded[i] === true) {\r\n      document.getElementById('expandIcon' + i).style.transform = 'scale(1)';\r\n      this.expanded[i] = false;\r\n    } else {\r\n      document.getElementById('expandIcon' + i).style.transform = 'scale(-1)';\r\n      this.expanded[i] = true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.expanded = new Array<boolean>(this.doctors.length);\r\n    console.log(this.doctors);\r\n  }\r\n}\r\n","<div class=\"section-doctors-list mt-5 p-5\">\r\n    <p class=\"h5 mb-3 text-center\">List of all Doctors on DocFind</p>\r\n    <ul class=\"list-group px-5\">\r\n        <li *ngFor=\"let doctor of doctors; let i = index\" class=\"list-item mb-3 mx-5\">\r\n            <div class=\"d-flex justify-content-between mb-n3\">\r\n                <p>🧠 {{ doctor.fullName }} | {{ doctor.qualification }} | {{ doctor.description }} | {{ doctor.avgRating }} ⭐</p>\r\n                <a class=\"no-underline\" data-toggle=\"collapse\" [href]=\"'#doctor' + i\">\r\n                    <svg class=\"expandIcon\" [id]=\"'expandIcon' + i\" (click)=\"flipIcon(i)\" width=\"15px\" height=\"15px\" viewBox=\"0 0 451.847 451.847\">\r\n                        <path d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751 c12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0 c12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"/>       \r\n                    </svg>\r\n                </a>\r\n            </div>\r\n            <div class=\"collapse\" [id]=\"'doctor' + i\">\r\n                <div class=\"card card-body card-body-custom py-2 px-3 mt-3\">\r\n                    <p class=\"m-0\">Email: {{ doctor.email }}</p>\r\n                    <p class=\"m-0\">Cellular Number: +{{ doctor.cellularNumber }}</p>\r\n                    <p class=\"m-0\">Address: {{ doctor.address }}</p>\r\n                    <p class=\"m-0\">Working Days: {{ doctor.workingDays }} | Working Hours: {{ doctor.workingHours }}</p>\r\n                    <p class=\"m-0\">Fee: {{ doctor.fee }}</p>\r\n                    <div class=\"row d-flex align-items-center\">\r\n                        <div class=\"col\">\r\n                            <p class=\"m-0\">Your Rating:</p>\r\n                        </div>\r\n                        <div class=\"col rate\">\r\n                            <input type=\"radio\" [id]=\"'star5-' + i\" name=\"rate\" value=\"5\"/>\r\n                            <label [for]=\"'star5-' + i\">5 stars</label>\r\n                            <input type=\"radio\" [id]=\"'star4-' + i\" name=\"rate\" value=\"4\"/>\r\n                            <label [for]=\"'star4-' + i\">4 stars</label>\r\n                            <input type=\"radio\" [id]=\"'star3-' + i\" name=\"rate\" value=\"3\"/>\r\n                            <label [for]=\"'star3-' + i\">3 stars</label>\r\n                            <input type=\"radio\" [id]=\"'star2-' + i\" name=\"rate\" value=\"2\"/>\r\n                            <label [for]=\"'star2-' + i\">2 stars</label>\r\n                            <input type=\"radio\" [id]=\"'star1-' + i\" name=\"rate\" value=\"1\"/>\r\n                            <label [for]=\"'star1-' + i\">1 star</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Patient } from 'src/app/models/patient.model';\r\n\r\n@Component({\r\n  selector: 'app-patient-dashboard-settings',\r\n  templateUrl: './patient-dashboard-settings.component.html',\r\n  styleUrls: ['./patient-dashboard-settings.component.sass']\r\n})\r\nexport class PatientDashboardSettingsComponent {\r\n\r\n  @Input() patient: Patient\r\n\r\n  constructor() {}\r\n}\r\n","<h3>Settings</h3>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Patient } from 'src/app/models/patient.model';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Doctor } from 'src/app/models/doctor.model';\r\n\r\n@Component({\r\n  selector: 'app-patient-dashboard',\r\n  templateUrl: './patient-dashboard.component.html',\r\n  styleUrls: ['./patient-dashboard.component.sass']\r\n})\r\nexport class PatientDashboardComponent {\r\n\r\n  patient: Patient;\r\n  doctors: Doctor[];\r\n\r\n  showDoctorsList: boolean = true;\r\n  showSettings: boolean = false;\r\n  patientName: string;\r\n\r\n  constructor(\r\n    private api: APIService,\r\n    private router: Router,\r\n    private titleService: Title\r\n  ) {\r\n    if (localStorage.getItem('type') === 'Doctor') this.router.navigate(['/user/doctor']);\r\n    this.patient = new Patient();\r\n    this.doctors = new Array<Doctor>();\r\n    this.api.getPatient(localStorage.getItem('id')).subscribe(\r\n      (res: any) => {\r\n        if (res.token !== '') {\r\n          this.api.getAllDoctors().subscribe(\r\n            (res: any) => {\r\n              if (res.token !== '') this.setDoctors(res);\r\n            }\r\n          );\r\n          this.setupDashboard(res);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setDoctors(res: any) {\r\n    console.log(res);\r\n    res.forEach(e => {\r\n      let doctor = new Doctor();\r\n      doctor.setValues(\r\n        e.id, e.fullName, e.email, '', e.cellularNumber,\r\n        e.qualification, e.workingDays, e.workingHours, \r\n        e.address, e.fee, e.description, e.ratings\r\n      );\r\n      this.doctors.push(doctor);\r\n    });\r\n    this.doctors.sort((a, b) => {\r\n      if (a.avgRating > b.avgRating) return -1;\r\n      if (a.avgRating < b.avgRating) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  gotoDoctorsList(): void {\r\n    this.showDoctorsList = true;\r\n    this.showSettings = false;\r\n  }\r\n\r\n  gotoSettings(): void {\r\n    this.showDoctorsList = false;\r\n    this.showSettings = true;\r\n  }\r\n\r\n  logOut(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('id');\r\n    localStorage.removeItem('type');\r\n    this.titleService.setTitle('DocFind');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  setupDashboard(res: any): void {\r\n    this.patient.setValues(res.id, res.fullName, res.email, '');\r\n    this.patientName = this.patient.fullName + ' | Patient';\r\n  }\r\n}\r\n","<div>\r\n    <div class=\"section-topbar\">\r\n        <div class=\"container d-flex justify-content-between align-items-center pt-3 pb-2\">\r\n            <h3 [innerHTML]=\"patientName\"></h3>\r\n            <div>\r\n                <a [ngClass]=\"{'current-patient-dashboard-link': showDoctorsList}\" class=\"text-black pointer h5 patient-dashboard-links\" (click)=\"gotoDoctorsList()\">Doctors List</a>\r\n                <a [ngClass]=\"{'current-patient-dashboard-link': showSettings}\" class=\"text-black pointer h5 ml-5 patient-dashboard-links\" (click)=\"gotoSettings()\">Settings</a>\r\n                <a class=\"text-black pointer h5 ml-5 patient-dashboard-links\" (click)=\"logOut()\">Log Out</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <app-patient-dashboard-doctors-list [ngClass]=\"{'d-none': !showDoctorsList}\" [patient]=\"patient\" [doctors]=\"doctors\"></app-patient-dashboard-doctors-list>\r\n        <app-patient-dashboard-settings [ngClass]=\"{'d-none': !showSettings}\" [patient]=\"patient\"></app-patient-dashboard-settings>\r\n    </div>\r\n    <svg class=\"mb-5 pb-5\" viewBox=\"0 0 1440 220\">\r\n        <path fill=\"#e98074\" d=\"M0,256L0,192L80,192L80,160L160,160L160,256L240,256L240,32L320,32L320,160L400,160L400,64L480,64L480,64L560,64L560,96L640,96L640,128L720,128L720,64L800,64L800,192L880,192L880,128L960,128L960,64L1040,64L1040,96L1120,96L1120,224L1200,224L1200,32L1280,32L1280,320L1360,320L1360,256L1440,256L1440,0L1360,0L1360,0L1280,0L1280,0L1200,0L1200,0L1120,0L1120,0L1040,0L1040,0L960,0L960,0L880,0L880,0L800,0L800,0L720,0L720,0L640,0L640,0L560,0L560,0L480,0L480,0L400,0L400,0L320,0L320,0L240,0L240,0L160,0L160,0L80,0L80,0L0,0L0,0Z\"></path>\r\n    </svg>  \r\n</div>","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { InputValidationService } from 'src/app/services/input-validation.service';\r\nimport { APIService } from 'src/app/services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html'\r\n})\r\nexport class UserLoginComponent {\r\n\r\n  validEmail: boolean = true;\r\n  validAccountType: boolean = true;\r\n  noError: boolean = true;\r\n\r\n  loginForm: any;\r\n  accountType: string;\r\n  apiError: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private inputValidation: InputValidationService,\r\n    private api: APIService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({ email: '', password: '' }); \r\n    this.accountType = 'Account Type';\r\n  }\r\n\r\n  setAccountType(type: string): void {\r\n    this.accountType = type;\r\n  }\r\n\r\n  onSubmit(formData: any): void {\r\n    if (this.isValidInput(formData)) {\r\n      if (this.accountType === 'Patient') {\r\n        this.api.patientAuthenticate(formData).subscribe(\r\n          (res: any) => {\r\n            this.noError = true;\r\n            if (res.token !== '') {\r\n              localStorage.setItem('token', res.token);\r\n              localStorage.setItem('id', res._id);\r\n              localStorage.setItem('type', 'Patient');\r\n              this.router.navigate(['/']);\r\n            }\r\n          }, (error: any) => { this.noError = false; this.apiError = error; }\r\n        );\r\n      } else if (this.accountType === 'Doctor') {\r\n        this.api.doctorAuthenticate(formData).subscribe(\r\n          (res: any) => {\r\n            this.noError = true;\r\n            if (res.token !== '') {\r\n              localStorage.setItem('token', res.token);\r\n              localStorage.setItem('id', res._id);\r\n              localStorage.setItem('type', 'Doctor');\r\n              this.router.navigate(['/']);\r\n            }\r\n          }, (error: any) => { this.noError = false; this.apiError = error; }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private isValidInput(formData: any): boolean {\r\n    this.validEmail = !this.inputValidation.isEmail(formData.email) ? false : true;\r\n    this.validAccountType = !(this.accountType !== 'Account Type') ? false : true;\r\n    return (this.validEmail && this.validAccountType) ? true : false;\r\n  }\r\n}\r\n","<div class=\"mt-3 mb-5\">\r\n    <div class=\"container w-50 text-center section-sign-up\">\r\n        <h2>Login to your account</h2>\r\n        <form class=\"section-form my-3\" [formGroup]=\"loginForm\" *ngIf=\"this.loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\r\n            <input id=\"email\" required formControlName=\"email\" type=\"email\" class=\"form-control form-control-custom mt-2\" placeholder=\"Email\">\r\n            <h6 [ngClass]=\"{'d-none': validEmail}\" class=\"font-weight-bold text-danger mt-2\">Invalid email</h6>\r\n            <input id=\"password\" required formControlName=\"password\" type=\"password\" class=\"form-control form-control-custom mt-2\" placeholder=\"Password\">\r\n            <div class=\"mx-auto mt-2 input-group\">\r\n                <div class=\"input-group-prepend mx-auto\">\r\n                    <button id=\"accountTypeBtn\" class=\"btn-dropdown px-4 py-2 dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" [innerHTML]=\"accountType\"></button>\r\n                    <div class=\"dropdown-menu my-2 mx-auto dropdown-menu-custom\">\r\n                        <li class=\"font-weight-bold dropdown-item dropdown-item-custom pointer\" (click)=\"setAccountType('Patient')\">Patient</li>\r\n                        <li class=\"font-weight-bold dropdown-item dropdown-item-custom pointer\" (click)=\"setAccountType('Doctor')\">Doctor</li>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h6 [ngClass]=\"{'d-none': validAccountType}\" class=\"font-weight-bold text-danger mt-2\">Please select an account type</h6>\r\n            <h6 [ngClass]=\"{'d-none': noError}\" class=\"font-weight-bold text-danger mt-2\" [innerHTML]=\"apiError\"></h6>\r\n            <button type=\"submit\" class=\"btn mt-3\">Login</button>\r\n        </form>\r\n        <p class=\"text-black h5\">\r\n            or <a class=\"h5 link\" routerLink=\"/user/signup\">Sign Up</a>\r\n        </p>\r\n    </div>\r\n    <svg class=\"mb-5\" viewBox=\"0 0 1440 220\">\r\n        <path fill=\"#e98074\" d=\"M0,256L0,320L62.6,320L62.6,96L125.2,96L125.2,160L187.8,160L187.8,224L250.4,224L250.4,320L313,320L313,256L375.7,256L375.7,128L438.3,128L438.3,224L500.9,224L500.9,192L563.5,192L563.5,32L626.1,32L626.1,256L688.7,256L688.7,32L751.3,32L751.3,128L813.9,128L813.9,288L876.5,288L876.5,64L939.1,64L939.1,192L1001.7,192L1001.7,320L1064.3,320L1064.3,64L1127,64L1127,64L1189.6,64L1189.6,160L1252.2,160L1252.2,320L1314.8,320L1314.8,96L1377.4,96L1377.4,288L1440,288L1440,0L1377.4,0L1377.4,0L1314.8,0L1314.8,0L1252.2,0L1252.2,0L1189.6,0L1189.6,0L1127,0L1127,0L1064.3,0L1064.3,0L1001.7,0L1001.7,0L939.1,0L939.1,0L876.5,0L876.5,0L813.9,0L813.9,0L751.3,0L751.3,0L688.7,0L688.7,0L626.1,0L626.1,0L563.5,0L563.5,0L500.9,0L500.9,0L438.3,0L438.3,0L375.7,0L375.7,0L313,0L313,0L250.4,0L250.4,0L187.8,0L187.8,0L125.2,0L125.2,0L62.6,0L62.6,0L0,0L0,0Z\"></path>\r\n    </svg>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { InputValidationService } from '../../../services/input-validation.service'; \r\nimport { APIService } from '../../../services/api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-signup',\r\n  templateUrl: './user-signup.component.html'\r\n})\r\nexport class UserSignupComponent {\r\n\r\n  validFullName: boolean = true;\r\n  validEmail: boolean = true;\r\n  validPassword: boolean = true;\r\n  validPasswordConfirm: boolean = true;\r\n  validAccountType: boolean = true;\r\n  noError: boolean = true;\r\n\r\n  signUpForm: any;\r\n  accountType: string;\r\n  apiError: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private inputValidation: InputValidationService,\r\n    private api: APIService,\r\n    private router: Router\r\n  ) {\r\n    this.signUpForm = this.formBuilder.group({\r\n      fullName: '', email: '', password: '', confirmPassword: ''\r\n    }); \r\n    this.accountType = 'Account Type';\r\n  }\r\n\r\n  setAccountType(type: string): void {\r\n    this.accountType = type;\r\n  }\r\n\r\n  onSubmit(formData: any): void {\r\n    if (this.isValidInput(formData)) {\r\n      if (this.accountType === 'Patient') {\r\n        this.api.patientRegister(formData).subscribe(\r\n          (res: any) => {\r\n            this.noError = true;\r\n            if (Object.keys(res).length === 0) {\r\n              this.api.patientAuthenticate(formData).subscribe(\r\n                (res: any) => {\r\n                  this.noError = true;\r\n                  if (res.token !== '') {\r\n                    localStorage.setItem('token', res.token);\r\n                    localStorage.setItem('id', res._id);\r\n                    localStorage.setItem('type', 'Patient');\r\n                    this.router.navigate(['/']);\r\n                  }\r\n                }, (error: any) => { this.noError = false; this.apiError = error; }\r\n              );\r\n            }\r\n          }, (error: any) => { this.noError = false; this.apiError = error; }\r\n        );\r\n      } else if (this.accountType === 'Doctor') {\r\n        this.api.doctorRegister(formData).subscribe(\r\n          (res: any) => {\r\n            this.noError = true;\r\n            if (Object.keys(res).length === 0) {\r\n              this.api.doctorAuthenticate(formData).subscribe(\r\n                (res: any) => {\r\n                  this.noError = true;\r\n                  if (res.token !== '') {\r\n                    localStorage.setItem('token', res.token);\r\n                    localStorage.setItem('id', res._id);\r\n                    localStorage.setItem('type', 'Doctor');\r\n                    this.router.navigate(['/']);\r\n                  }\r\n                }, (error: any) => { this.noError = false; this.apiError = error; }\r\n              );\r\n            }\r\n          }, (error: any) => { this.noError = false; this.apiError = error; }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private isValidInput(formData: any): boolean {\r\n    this.validFullName = !this.inputValidation.isAlphabetsOnly(formData.fullName) ? false : true;\r\n    this.validEmail = !this.inputValidation.isEmail(formData.email) ? false : true;\r\n    this.validPassword = !(formData.password.length >= 8) ? false : true;\r\n    this.validPasswordConfirm = !(formData.password === formData.confirmPassword) ? false : true;\r\n    this.validAccountType = !(this.accountType !== 'Account Type') ? false : true;\r\n    return (this.validFullName && this.validEmail && this.validPassword && this.validPasswordConfirm && this.validAccountType) ? true : false;\r\n  }\r\n}\r\n","<div class=\"mt-3 mb-5\">\r\n    <div class=\"container w-50 text-center section-sign-up\">\r\n        <h2>Create a new account</h2>\r\n        <form class=\"section-form my-3\" [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit(signUpForm.value)\">\r\n            <input id=\"fullName\" required formControlName=\"fullName\" type=\"text\" class=\"form-control form-control-custom\" placeholder=\"Full Name\">\r\n            <h6 [ngClass]=\"{'d-none': validFullName}\" class=\"font-weight-bold text-danger mt-2\">Invalid name</h6>\r\n            <input id=\"email\" required formControlName=\"email\" type=\"email\" class=\"form-control form-control-custom mt-2\" placeholder=\"Email\">\r\n            <h6 [ngClass]=\"{'d-none': validEmail}\" class=\"font-weight-bold text-danger mt-2\">Invalid email</h6>\r\n            <input id=\"password\" required formControlName=\"password\" type=\"password\" class=\"form-control form-control-custom mt-2\" placeholder=\"Password\">\r\n            <h6 [ngClass]=\"{'d-none': validPassword}\" class=\"font-weight-bold text-danger mt-2\">Password should be at least 8 characters long</h6> \r\n            <input id=\"confirmPassword\" required formControlName=\"confirmPassword\" type=\"password\" class=\"form-control form-control-custom mt-2\" placeholder=\"Confirm Password\">\r\n            <h6 [ngClass]=\"{'d-none': validPasswordConfirm}\" class=\"font-weight-bold text-danger mt-2\">Passwords do not match</h6>\r\n            <div class=\"mx-auto mt-2 input-group\">\r\n                <div class=\"input-group-prepend mx-auto\">\r\n                    <button id=\"accountTypeBtn\" class=\"btn-dropdown px-4 py-2 dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" [innerHTML]=\"accountType\"></button>\r\n                    <div class=\"dropdown-menu my-2 mx-auto dropdown-menu-custom\">\r\n                        <li class=\"font-weight-bold dropdown-item dropdown-item-custom pointer\" (click)=\"setAccountType('Patient')\">Patient</li>\r\n                        <li class=\"font-weight-bold dropdown-item dropdown-item-custom pointer\" (click)=\"setAccountType('Doctor')\">Doctor</li>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h6 [ngClass]=\"{'d-none': validAccountType}\" class=\"font-weight-bold text-danger mt-2\">Please select an account type</h6>\r\n            <button type=\"submit\" class=\"btn mt-3\">Sign Up</button>\r\n        </form>\r\n        <p class=\"text-black h5\">\r\n            or <a class=\"h5 link\" routerLink=\"/user/login\">Login</a>\r\n        </p>\r\n        <h6 [ngClass]=\"{'d-none': noError}\" class=\"font-weight-bold text-danger mt-2\" [innerHTML]=\"apiError\"></h6>\r\n    </div>\r\n    <svg class=\"mb-5\" viewBox=\"0 0 1440 220\">\r\n        <path fill=\"#e98074\" d=\"M0,256L0,320L62.6,320L62.6,96L125.2,96L125.2,160L187.8,160L187.8,224L250.4,224L250.4,320L313,320L313,256L375.7,256L375.7,128L438.3,128L438.3,224L500.9,224L500.9,192L563.5,192L563.5,32L626.1,32L626.1,256L688.7,256L688.7,32L751.3,32L751.3,128L813.9,128L813.9,288L876.5,288L876.5,64L939.1,64L939.1,192L1001.7,192L1001.7,320L1064.3,320L1064.3,64L1127,64L1127,64L1189.6,64L1189.6,160L1252.2,160L1252.2,320L1314.8,320L1314.8,96L1377.4,96L1377.4,288L1440,288L1440,0L1377.4,0L1377.4,0L1314.8,0L1314.8,0L1252.2,0L1252.2,0L1189.6,0L1189.6,0L1127,0L1127,0L1064.3,0L1064.3,0L1001.7,0L1001.7,0L939.1,0L939.1,0L876.5,0L876.5,0L813.9,0L813.9,0L751.3,0L751.3,0L688.7,0L688.7,0L626.1,0L626.1,0L563.5,0L563.5,0L500.9,0L500.9,0L438.3,0L438.3,0L375.7,0L375.7,0L313,0L313,0L250.4,0L250.4,0L187.8,0L187.8,0L125.2,0L125.2,0L62.6,0L62.6,0L0,0L0,0Z\"></path>\r\n    </svg>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html'\r\n})\r\nexport class UserComponent {\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"container text-center section-authenticate\">\r\n    <h1 class=\"mb-4\">Welcome, Dear User</h1>\r\n    <h4 class=\"mb-2\">To proceed further</h4>\r\n    <h4 class=\"mb-4\">Please choose one of the following options</h4>\r\n    <button type=\"button\" class=\"btn mr-4\" routerLink=\"/user/signup\">Sign Up</button>\r\n    <p class=\"h4 d-inline mx-3\">or</p>\r\n    <button type=\"button\" class=\"btn ml-4\" routerLink=\"/user/login\">Login</button>\r\n</div>\r\n","export class Doctor {\r\n    id: string;\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n    cellularNumber: string;\r\n    qualification: string;\r\n    workingDays: string;\r\n    workingHours: string;\r\n    address: string;\r\n    fee: number;\r\n    description: string;\r\n    ratings: string[];\r\n    avgRating: number;\r\n\r\n    constructor() {\r\n        this.id = this.fullName = this.email = this.password = '';\r\n        this.cellularNumber = this.qualification = this.workingDays = '';\r\n        this.workingHours = this.address = this.description = '';\r\n        this.fee = this.avgRating = 0;\r\n        this.ratings = new Array<string>();\r\n    }\r\n\r\n    public setValues(\r\n        id: string,\r\n        fullName: string,\r\n        email: string,\r\n        password: string,\r\n        cellularNumber: string,\r\n        qualification: string,\r\n        workingDays: string,\r\n        workingHours: string,\r\n        address: string,\r\n        fee: number,\r\n        description: string,\r\n        ratings: string[]\r\n    ) {\r\n        this.id = id;\r\n        this.fullName = fullName;\r\n        this.email = email;\r\n        this.password = password;\r\n        this.cellularNumber = cellularNumber;\r\n        this.qualification = qualification;\r\n        this.workingDays = workingDays;\r\n        this.workingHours = workingHours;\r\n        this.address = address;\r\n        this.description = description;\r\n        this.fee = fee;\r\n        this.ratings = ratings;\r\n    }\r\n}\r\n","export class Patient {\r\n    id: string;\r\n    fullName: string;\r\n    email: string;\r\n    password: string;\r\n\r\n    constructor() {\r\n        this.id = this.fullName = this.email = this.password = '';\r\n    }\r\n\r\n    public setValues(id: string, fullName: string, email: string, password: string) {\r\n        this.id = id;\r\n        this.fullName = fullName;\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Patient } from '../models/patient.model';\r\nimport { Doctor } from '../models/doctor.model';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport * as API from '../../assets/api.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class APIService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  patientRegister(patient: Patient) {\r\n    const patientJSON = JSON.stringify(patient);\r\n    const url = API.patientRegister;\r\n    const body = patientJSON;\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  patientAuthenticate(patient: Patient) {\r\n    const url = API.authenticatePatient;\r\n    const body = { email: patient.email, password: patient.password };\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  updatePatientCredentials() {\r\n\r\n  }\r\n\r\n  updatePatient() {\r\n\r\n  }\r\n\r\n  getPatient(id: string) {\r\n    const url = API.getPatientByID;\r\n    const body = { 'id': id };\r\n    const headers = new HttpHeaders({ \r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}` \r\n    });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  doctorRegister(doctor: Doctor) {\r\n    const doctorJSON = JSON.stringify(doctor);\r\n    const url = API.doctorRegister;\r\n    const body = doctorJSON;\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  doctorAuthenticate(doctor: Doctor) {\r\n    const url = API.authenticateDoctor;\r\n    const body = { email: doctor.email, password: doctor.password };\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  updateDoctorCredentials(params: any, doctorId: string) {\r\n    const url = API.updateDoctorCredentials;\r\n    const body = {\r\n      id: doctorId,\r\n      email: params.email,\r\n      password: params.password,\r\n      newEmail: params.newEmail,\r\n      newPassword: params.newPassword\r\n    }\r\n    const headers = new HttpHeaders({ \r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n  \r\n  updateDoctor(params: any, doctorId: string) {\r\n    const url = API.updateDoctor;\r\n    const body = {\r\n      id: doctorId,\r\n      fullName: params.fullName,\r\n      cellularNumber: params.cellularNumber,\r\n      qualification: params.qualification,\r\n      workingDays: params.workingDays,\r\n      workingHours: params.workingHours,\r\n      address: params.address,\r\n      description: params.description,\r\n      fee: params.fee\r\n    }\r\n    const headers = new HttpHeaders({ \r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  getDoctor(id: string) {\r\n    const url = API.getDoctorByID;\r\n    const body = { 'id': id }\r\n    const headers = new HttpHeaders({ \r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    });\r\n    return this.http.post(url, body, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  addRating() {\r\n\r\n  }\r\n\r\n  getAllDoctors() {\r\n    const url = API.getAllDoctors;\r\n    const headers = new HttpHeaders({ \r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    });\r\n    return this.http.post(url, {}, { headers }).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  private errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.error.message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (localStorage.getItem('type') === 'Patient') return true;\r\n    else if (localStorage.getItem('type') === 'Doctor') return true;\r\n    this.router.navigate(['/']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as codes from '../../assets/codes.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialCodesService {\r\n\r\n  private dialCodes: any[] = (codes as any).default;\r\n\r\n  constructor() {}\r\n\r\n  getDialCodes(): any {\r\n    return this.dialCodes\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (localStorage.getItem('type') === 'Patient') {\r\n      this.router.navigate(['/user/patient']);\r\n      return false;\r\n    } else if (localStorage.getItem('type') === 'Doctor') {\r\n      this.router.navigate(['/user/doctor']);\r\n      return false;\r\n    } return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputValidationService {\r\n\r\n  constructor() {}\r\n\r\n  isAlphabetsOnly(str: string): boolean {\r\n    const regex = /^[A-Za-z\\s]+$/;\r\n    return str.match(regex) ? true : false;\r\n  }\r\n\r\n  isNumberOnly(str: string): boolean {\r\n    const regex = /^[0-9]*$/;\r\n    return str.match(regex) ? true : false;\r\n  }\r\n  \r\n  isEmail(email: string): boolean {\r\n    const regex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n    return email.match(regex) ? true : false;\r\n  }\r\n\r\n  isPhoneNumber(str: string): boolean {\r\n    const regex = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/;\r\n    return str.match(regex) ? true : false;\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}